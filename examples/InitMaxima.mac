/*
Init File for school used it in this way:
  - place File in same directory as your Maxima File
  - load it with: batchload("filename")$
*/

kill(all)$
ratprint: false$
realonly:true$
fpprintprec: 4$

/* --------------- Zeichnen ----------------------------------------- */
/* testet ob es eine Variable gibt */
check_Var(test, options):=block(
    /* make local variables */
    [a],
    a:false,
     /* Key vorhanden, verschieden von false ? */
    if assoc(test,options ) # false then a:true,
    return(a)
)$

Zeichne(gl,von,bis,[options]):=
block(
    /* lokale Variable */
    [filename,x_lable,y_lable],
    /* Optionale Parameter laden bzw. setzen */
    if check_Var(filename, options)=false then filename:"-1"
    else                                       filename: assoc(filename,options),

    if check_Var(xlable, options)=false then x_lable:"x-Achse"
    else                                     x_lable: assoc(xlable,options),

    if check_Var(ylable, options)=false then y_lable:"y-Achse"
    else                                     y_lable: assoc(ylable,options),

    block(
      if length(gl)=1 then gl: makelist (gl),
      pointlist: makelist ([color=black, line_width=3, explicit(gl[i],x,0,bis)], i, length(gl))
    ),

    load(draw),
    wxdraw2d(
        xrange=[0,bis],
        xaxis=true, yaxis=true,
        xlabel=x_lable,
        ylabel=y_lable,
        pointlist
    ),

    /* Ausgabe Datei */
    if filename # "-1" then
        draw2d(
            xrange=[0,bis],
            xaxis=true, yaxis=true,
            xlabel=x_lable,
            ylabel=y_lable,
            grid=true,
            pointlist,
            user_preamble = ["
                set encoding utf8
                set terminal svg enhanced font \"Helvetica,18\"
            "],
            file_name = filename,
            terminal = svg
        )
)$

/* --------------- 2dim Gleichungssystem ---------------------------- */
GlSys2(gl1,gl2):=block(
    erg_solve: solve([gl1,gl2], [x,y]),
    return (first(erg_solve))
)$
GlSys2Var(gl1,gl2,a,b):=block(
    erg_solve: solve([gl1,gl2], [a,b]),
    return (first(erg_solve))
)$

/* --------------- Funktion aufstellen ------------------------------- */
CreateFunktion(p1,p2, f):=
block(
    gl1:subst ([x=p1[1], y=p1[2]], f),
    gl2:subst ([x=p2[1], y=p2[2]], f),
    erg: solve([gl1,gl2],[a,b]),
    return(
        subst ([a=rhs(erg[1][1]), b=rhs(erg[1][2])], f)
    )
)$
